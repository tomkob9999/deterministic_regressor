###### Simple Handmade Data Files 2 ######

import copy
from sklearn.metrics import precision_score, recall_score, f1_score
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.datasets import load_iris

import time

def measure(start_time):
    end_time = time.time()

    elapsed_time = end_time - start_time
    minutes, seconds = divmod(elapsed_time, 60)
    milliseconds = int(elapsed_time * 1000 % 1000)
    return f"{int(minutes)}:{str(int(seconds)).zfill(2)}:{str(int(milliseconds)).zfill(3)}"
           
start_time = time.time()


file_path = '/kaggle/input/tomio1/dnf_regression.txt' # Short
file_path = '/kaggle/input/tomio2/dnf_regression.txt' # Short
file_path = '/kaggle/input/tomio3/dnf_regression.txt' # Short
file_path = '/kaggle/input/tomio4/dnf_regression.txt' # Long
file_path = '/kaggle/input/tomio5/dnf_regression.txt' # Long
file_path = '/kaggle/input/tomio6/dnf_regression.txt' # Medium
file_path = '/kaggle/input/tomio7/dnf_regression.txt' # Medium

###### Load the dataset ###### 
data_list = None
with open(file_path, 'r') as f:
    data_list = [line.strip().split('\t') for line in f]
###### Load the dataset ###### 

print("read file_path finished", measure(start_time))
start_time = time.time()

reg = Deterministic_Regressor()

answer = reg.clean_and_discretize([row[-1] for row in data_list[1:]], 1)

print("read file_pathclean_and_discretizefinished", measure(start_time))
start_time = time.time()

oup = reg.train(data_list=data_list, error_tolerance=0.00, useExpanded=True)
print("train() finished", measure(start_time))
start_time = time.time()

res = reg.solve(oup, useUnion=False)
print("solve() finished", measure(start_time))

print("res", res)
Deterministic_Regressor.show_stats(res, answer) 